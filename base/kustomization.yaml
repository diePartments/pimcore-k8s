apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
helmGlobals:
  chartHome: ./charts

helmCharts:
  # pimcore deployment.
  - releaseName: pimcore
    name: pimcore-deployment
    valuesInline:
      fullname: pimcore
      labels:
        tier: backend
        role: web
        primary: "true"
        app: pimcore
        lang: php
      pimcore:
        selectorLabels:
          tier: backend
          role: web
          app: pimcore
          lang: php
        php:
          command:
            - /bin/bash
          args:
            - -c
            - /var/www/bin/console cache:warmup & php-fpm -F
  # common cli operations.
  - releaseName: pimcore-ops
    name: pimcore-deployment
    valuesInline:
      fullname: pimcore-ops
      labels:
        tier: ops
        role: console
        app: pimcore
        lang: php
      pimcore:
        selectorLabels:
        tier: ops
        role: console
        app: pimcore
        lang: php
        nginx:
          enabled: false
        php:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          probe: false
          resources:
            requests:
              memory: 64Mi
              cpu: 25m
            limits:
              memory: 6144Mi
              cpu: 500m
          command:
            - /bin/bash
          args:
            - -c
            - echo "Starting..." && tail -f /dev/null
  # messenger deployments.
  # - releaseName: messenger-async
  #   name: pimcore-deployment
  #   valuesInline:
  #     labels:
  #       tier: messenger
  #       app: pimcore
  #       role: async-worker
  #       lang: php
  #     fullname: messenger-async
  #     pimcore:
  #       selectorLabels:
  #         tier: backend
  #         app: pimcore
  #         role: messenger
  #         lang: php
  #       nginx:
  #         enabled: false
  #       php:
  #         probe: false
  #         command:
  #           - /bin/bash
  #           - -c
  #           - /var/www/bin/bin/console messenger:consume async -vv

resources:
  - cron/pimcore-maintenance.yaml
  - cron/sitemap-generator.yaml
  - service-account/service-account.yaml
  - service-account/role.yaml
  - service-account/role-binding.yaml

configMapGenerator:
  - name: php-conf-d
    files:
      - ./etc/php-conf-d/opcache.ini
      - ./etc/php-conf-d/pimcore.ini
  - name: php-fpm-d
    files:
      - ./etc/php-fpm-d/pimcore.conf
  - name: nginx-conf-d
    files:
      - ./etc/nginx-conf-d/default.conf

patches:
  # Attach mandatory envs from configmaps and secrets
  - target:
      kind: Deployment
      labelSelector: app=pimcore
    path: ./patches/containers/pimcore-env-from.yaml
  - target:
      kind: CronJob
      labelSelector: app=pimcore
    path: ./patches/containers/cron-pimcore-env-from.yaml

  # Attach regred to all deployments and cronjobs
  - target:
      kind: Deployment
    path: ./patches/deployment-pull-secret.yaml
  - target:
      kind: CronJob
    path: ./patches/cronjob-pull-secret.yaml

  # Wait for pimcore backend deployments
  - target:
      kind: Deployment
      labelSelector: tier!=ops,app=pimcore,primary!=true,!primary
    path: ./patches/init-containers/wait-for-pimcore.yaml

  # Attach php-conf-d
  - target:
      kind: Deployment
      labelSelector: app=pimcore,lang=php
    path: ./patches/volumes/mount-php-conf-d.yaml
  - target:
      kind: CronJob
      labelSelector: app=pimcore,lang=php
    path: ./patches/volumes/cron-mount-php-conf-d.yaml

  # Attach php-fpm-d
  - target:
      kind: Deployment
      labelSelector: app=pimcore,role=web,lang=php
    path: ./patches/volumes/mount-php-fpm-d.yaml

  # Attach nginx-conf-d
  - target:
      kind: Deployment
      labelSelector: role=web,app=pimcore
    path: ./patches/volumes/mount-nginx-conf-d.yaml

  # Add php-fpm exporter
  - target:
      kind: Deployment
      labelSelector: role=web,lang=php
    path: ./patches/containers/php-fpm-exporter.yaml
